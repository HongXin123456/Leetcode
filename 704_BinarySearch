Given an array of integers nums which is sorted in ascending order, and an integer target, write a function to search target in nums. 
If target exists, then return its index. Otherwise, return -1. You must write an algorithm with O(log n) runtime complexity.


public class BinarySearch {
    public static int search(int[] nums, int target) {
        int left = 0;
        int right = nums.length-1;

        while (left <= right){
            System.out.println("===left" + left);
            
            System.out.println("right" + right);
            
            int mid = left+(right-left)/2;
            System.out.println("mid" + mid);
            if (nums[mid]==target){
                return mid;
            }else if (nums[mid]<target){
                left = mid+1;
            }else{
                right=mid-1;
            }
        }
        return -1;
    }

    public static void main(String[] args) {
        int[] nums = {-1, 0};
        int target = -1;
        int result = search(nums, target);
        System.out.println("Index of target: " + result);
     
        
    }
}
